name: 'Build Docker Image'

on:
  workflow_call:
    inputs:
      working-directory:
        description: The directory containing the Dockerfile
        required: true
        type: string
      dockerfile:
        description: The name of the Dockerfile
        required: false
        default: 'Dockerfile'
        type: string
      registry:
        description: The name of the docker repository where the image will be published
        required: true
        default: 'pnnldp.azurecr.io'
        type: string
      buildx-version:
        description: The version of docker Buildx used to build the image
        required: false
        type: string
      image-tag:
        description: The full tag (name:version) to use for the docker image, e.g. my-api:v2.0.4-14579937367
        required: true
        type: string
      push:
        description: Boolean to indicate if built docker image should be pushed to the remote registry
        required: false
        default: false
        type: boolean
      scan:
        description: Boolean to enable/disable Trivy scan
        required: false
        default: true
        type: boolean
      scan-ubuntufix:
        description: Boolean to enable/disable Trivy scan fix for Ubuntu runners (Network socket is configured by default - set to true for ubuntu-latest runners)
        required: false
        default: false
        type: boolean
      fail-onvulnerability:
        description: Boolean to fail the build on HIGH or CRITICAL vulnerabilities in Trivy scan
        required: false
        default: true
        type: boolean
    secrets:
      az-client-id:
        description: The client ID used to authenticate to the repository
        required: true
      az-client-secret:
        description: The client secret used to authenticate to the repository
        required: true
      github-token:
        description: The token used to make calls to the github API
        required: true

jobs:
  build-scan-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ secrets.az-client-id }}
          password: ${{ secrets.az-client-secret }}

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v3
        with:
          version: ${{ inputs.buildx-version }}
          driver: docker

      - name: Build Image
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.working-directory }}
          file: ${{ inputs.working-directory }}/${{ inputs.dockerfile || 'Dockerfile' }}
          load: true
          tags: ${{ inputs.registry }}/${{ inputs.image-tag }}

      - name: Scan Image
        if: ${{ inputs.scan }}
        uses: aquasecurity/trivy-action@0.30.0
        env:
          ACTIONS_RUNTIME_TOKEN: ${{ secrets.github-token }}
          TRIVY_DB_REPOSITORY: ghcr.io/aquasecurity/trivy-db:2
        with:
          image-ref: ${{ inputs.registry }}/${{ inputs.image-tag }}
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          output: trivy.txt
          docker-host: ${{ !inputs.scan-ubuntufix && 'unix:///run/user/1000/docker.sock' || '' }}

      - name: Publish Trivy Output to Summary
        if: ${{ inputs.scan && (success() || failure()) }}
        shell: bash
        run: |
          if [[ -s trivy.txt ]]; then cat trivy.txt; fi
          if [[ -s trivy.txt ]]; then
            {
              echo "### Trivy Scan Output"
              echo "<details><summary>Click to expand</summary>"
              echo ""
              echo '```'
              cat trivy.txt
              echo '```'
              echo "</details>"
            } >> $GITHUB_STEP_SUMMARY
          fi

      - name: Fail on High or Critical Vulnerabilities
        if: ${{ inputs.scan }}
        shell: pwsh
        run: |
          $trivyFile = 'trivy.txt'
          if (Test-Path $trivyFile) {
            $content = Get-Content $trivyFile -Raw
            $high = 0
            $critical = 0
            if ($content -match 'HIGH: (\d+)') { $high = [int]$matches[1] }
            if ($content -match 'CRITICAL: (\d+)') { $critical = [int]$matches[1] }
            if ($high -gt 0 -or $critical -gt 0) {
              if ('${{ inputs.fail-onvulnerability }}' -eq 'true') {
                Write-Host "::error::Trivy scan found HIGH ($high) or CRITICAL ($critical) vulnerabilities. Failing the build."
                exit 1
              } else {
                Write-Host "::warning::Trivy scan found HIGH ($high) or CRITICAL ($critical) vulnerabilities, but fail-onvulnerability is false. Continuing."
              }
            } else {
              Write-Host "::notice::Trivy no high or critical vulnerabilities found."
            }
          }

      - name: Push Image
        uses: docker/build-push-action@v6
        if: ${{ success() && inputs.push }}
        with:
          context: ${{ inputs.working-directory }}
          push: true
          tags: ${{ inputs.registry }}/${{ inputs.image-tag }}
